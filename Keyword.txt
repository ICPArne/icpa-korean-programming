#조건문
 만약 (조건문)이면: => if (조건문):
 대신 (조건문)이면: => elif (조건문):
 아니면: => else:

#반복문
 i을/를 a부터 b까지 (간격 c로) 반복하기: => for i in range(a, b[, c])
 (조건문)인 동안 반복하기: => while (조건문):
  * 추가 서식(반복문 안에서만 가능): (1) 탈출하기 => break (2) 돌아가기 => continue

#예약어, 키워드 등
 (매개변수)을/를 받는 (함수이름) 선언하기: => def 함수이름(매개변수):
  * 반환 서식: (~) 반환하기 => return (~)
 (~) 출력하기 => print(~)
  * 출력 서식: (1) %d, %s 등의 사용 (2) "{0}"의 (대입할 값) 대입값 출력하기
 (식별자) 입력받기 => (식별자) = input("입력: ")
 (식별자) 삭제하기 => del (식별자)
 (문자열, 배열)의 길이 => len(문자열, 배열)

#사칙 연산자
 +, -, *, /, %

#비트 연산자
 &(and), |(or), ^(xor)

#논리 자료형 관련
 참 => True
 거짓 => False  
 또는 => or
 그리고 => and
 (~)이/가 아님 => not (~)
 (문자열, 배열) 안에 (~)이/가 있음 => (~) in (문자열, 배열)
 (문자열, 배열) 안에 (~)이/가 있지 않음 => (~) not in (문자열, 배열)

#구현할 자료형
 정수(int): 정수(~) => int(~)
 실수(float): 실수(~) => float(~)
 문자열(string): 문자열(~) => str(~)
 논리 자료형(boolean)
 없음(None)
 배열(list)
  * 배열 선언: (1) (식별자) = 배열() / (2) (식별자) = []
  * 배열 인덱스 접근: 배열이름[인덱스]
  * 배열 메소드:
   (1) (배열이름)에 (자료) 추가하기 => (배열이름).append(자료)
   (2) (배열이름)에서 (자료)의 위치 => (배열이름).index(자료)
   (3) (배열이름) 비우기 => (배열이름).clear()
   (4) (배열이름)에서 (자료) 지우기 => (배열이름).remove(자료)
   (5) (배열이름)에서 꺼내기 => (배열이름).pop()
   (6) (배열이름)에서 (숫자)번을 꺼내기/꺼낸 값 => (배열이름).pop(숫자)

